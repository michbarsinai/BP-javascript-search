@startuml
package bp {

legend bottom
<b>Main classes and methods for the <i>bp</i> package. This</b>
<b>is not an exhaustive list of everything,</b>
<b>just what you need to know to get started.</b>

The main class, from client code point of view,
is <i>BProgram</i>.
endlegend

package bprogram {
  class BProgram {
    - javascriptContext
    + start()
  }

  class BThread {
    - javascriptContext
  }

  class BSyncState {
    + statements
    + externalEvents
  }

  class RWBStatement

  package listenters {
    interface BProgramListener
    class InMemoryEventLogger ..|> BProgramListener
    class StreamLogger ..|> BProgramListener
  }

  BThread *--> "0..1" RWBStatement
  BProgram *--> "1..*" BThread
  BProgram *--> "1..*" BProgramListener: listeners
  BSyncState o--> "1..*" RWBStatement

}

package events {
  class BEvent
}


package eventsets {
  interface EventSet {
    contains(BEvent)
  }
  class ExplicitEventSet {
    + events:Set<Event>
  }

  class Events {
    {static} emptySet: EventSet
    {static} allSet: EventSet
    {static} noEvents: Set<BEvent>
    {static} ofClass( Class ): Set<BEvent>
  }

  ExplicitEventSet .up.|> EventSet
  ExplicitEventSet *--> "0..*" BEvent
}

package eventselection {
  interface EventSelectionStrategy {
    EventSelectionResult select(statements);
  }

  class SimpleEventSelectionStrategy {
    + randomSeed:int
  }
  class Selected {
    + event
  }

  class SelectedExternal {
    + index
  }

  class EventSelectionResult <<abstract>> {
    + accept( Visitor<R> ) : R
  }

  class Deadlock <<Singleton>>
  class NoneRequested <<Singleton>>

  class Selected --|> EventSelectionResult
  class SelectedExternal --|> Selected
  class Deadlock --|> EventSelectionResult
  class NoneRequested --|> EventSelectionResult

  SimpleEventSelectionStrategy ..|> EventSelectionStrategy
  EventSelectionStrategy ..>EventSelectionResult : <<creates>>
  EventSelectionStrategy ..>BSyncState : <<consumes>>
}

BProgram *--> EventSelectionStrategy: <<arbiter>>
BEvent ..|> EventSet
RWBStatement *--> EventSet: waitFor
RWBStatement *--> EventSet: block
RWBStatement *--> ExplicitEventSet: request
Selected o-->BEvent : selected event
}
@enduml
